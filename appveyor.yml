environment:
  VisualStudioVersion: 8.0
  global:
    # This will be used as part of the zipfile name
    # TODO change the project name
    CRATE_NAME: rdp
    # TODO This is the Rust channel that build jobs will use by default but can be
    # overridden on a case by case basis down below
    RUST_VERSION: stable
  # TODO feel free to delete targets/channels you don't need
  matrix:
    # Stable channel
    # - TARGET: i686-pc-windows-msvc
    #   CHANNEL: stable
    # - TARGET: x86_64-pc-windows-msvc
    #   CHANNEL: stable
    - TARGET: x86_64-pc-windows-gnu
      CHANNEL: stable
    - TARGET: i686-pc-windows-gnu
      CHANNEL: stable
    # Beta channel
    # - TARGET: i686-pc-windows-msvc
    #   CHANNEL: beta
    - TARGET: x86_64-pc-windows-gnu
      CHANNEL: beta
    # Nightly channel
    # - TARGET: i686-pc-windows-msvc
    #   CHANNEL: nightly
    - TARGET: x86_64-pc-windows-gnu
      CHANNEL: nightly

# Install Rust and Cargo
install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

# Equivalent to Travis' `script` phase
# TODO modify this phase as you see fit
test_script:
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo test
    )

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: staging

before_deploy:
  # Generate artifacts for release
  # build artifacts for generating a .def, needed by the MinGW Python build
  - cargo rustc --target %TARGET% --release
  # - cargo rustc --target %TARGET% --release -- -C target-cpu=native -C link-args=-Wl,--out-implib,rdp.a
  # - dlltool -z target\%TARGET%\release\rdp.def --export-all-symbols target\%TARGET%\release\rdp.dll
  - set OLDPATH=%PATH%
  - set PATH=%PATH%;"C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin"
  - dumpbin /exports target\%TARGET%\release\rdp.dll
  - dumpbin /exports target\%TARGET%\release\rdp.dll > dumpbin.txt
  - appveyor PushArtifact dumpbin.txt
  - ps: ci\before_deploy.ps1

deploy:
  appveyor_repo_tag: true
  tag: $(APPVEYOR_REPO_TAG_NAME)
  release: $(APPVEYOR_REPO_TAG_NAME)
  description: 'Binaries'
  provider: GitHub
  auth_token:
    secure: +wVllBt1V1Mlg9aWCBmsR3HH1VX8yJ18bSVO5mfB/a2EuJ4WG/ilNwcsBpBHuL5U
  artifact: /.*\.zip/
  draft: false
  prerelease: false
  on:
    appveyor_repo_tag: true
    CHANNEL: stable

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    - master
    - /v\d\.\d\.\d/

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
